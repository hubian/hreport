<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hubian.hreport.service.model.mapper.ReportDataMapper" >
  <resultMap id="BaseResultMap" type="org.hubian.hreport.service.model.generated.ReportData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="data_id" property="dataId" jdbcType="BIGINT" />
    <result column="table_id" property="tableId" jdbcType="INTEGER" />
    <result column="data_version" property="dataVersion" jdbcType="VARCHAR" />
    <result column="lf1" property="lf1" jdbcType="BIGINT" />
    <result column="lf2" property="lf2" jdbcType="BIGINT" />
    <result column="lf3" property="lf3" jdbcType="BIGINT" />
    <result column="lf4" property="lf4" jdbcType="BIGINT" />
    <result column="lf5" property="lf5" jdbcType="BIGINT" />
    <result column="lf6" property="lf6" jdbcType="BIGINT" />
    <result column="lf7" property="lf7" jdbcType="BIGINT" />
    <result column="lf8" property="lf8" jdbcType="BIGINT" />
    <result column="lf9" property="lf9" jdbcType="BIGINT" />
    <result column="lf10" property="lf10" jdbcType="BIGINT" />
    <result column="sf1" property="sf1" jdbcType="VARCHAR" />
    <result column="sf2" property="sf2" jdbcType="VARCHAR" />
    <result column="sf3" property="sf3" jdbcType="VARCHAR" />
    <result column="sf4" property="sf4" jdbcType="VARCHAR" />
    <result column="sf5" property="sf5" jdbcType="VARCHAR" />
    <result column="sf6" property="sf6" jdbcType="VARCHAR" />
    <result column="sf7" property="sf7" jdbcType="VARCHAR" />
    <result column="sf8" property="sf8" jdbcType="VARCHAR" />
    <result column="sf9" property="sf9" jdbcType="VARCHAR" />
    <result column="sf10" property="sf10" jdbcType="VARCHAR" />
    <result column="jf1" property="jf1" jdbcType="VARCHAR" />
    <result column="jf2" property="jf2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    data_id, table_id, data_version, lf1, lf2, lf3, lf4, lf5, lf6, lf7, lf8, lf9, lf10, 
    sf1, sf2, sf3, sf4, sf5, sf6, sf7, sf8, sf9, sf10, jf1, jf2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.hubian.hreport.service.model.generated.ReportDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from report_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from report_data
    where data_id = #{dataId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from report_data
    where data_id = #{dataId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.hubian.hreport.service.model.generated.ReportDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from report_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hubian.hreport.service.model.generated.ReportData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="dataId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into report_data (table_id, data_version, lf1, 
      lf2, lf3, lf4, lf5, 
      lf6, lf7, lf8, lf9, 
      lf10, sf1, sf2, sf3, 
      sf4, sf5, sf6, sf7, 
      sf8, sf9, sf10, jf1, 
      jf2)
    values (#{tableId,jdbcType=INTEGER}, #{dataVersion,jdbcType=VARCHAR}, #{lf1,jdbcType=BIGINT}, 
      #{lf2,jdbcType=BIGINT}, #{lf3,jdbcType=BIGINT}, #{lf4,jdbcType=BIGINT}, #{lf5,jdbcType=BIGINT}, 
      #{lf6,jdbcType=BIGINT}, #{lf7,jdbcType=BIGINT}, #{lf8,jdbcType=BIGINT}, #{lf9,jdbcType=BIGINT}, 
      #{lf10,jdbcType=BIGINT}, #{sf1,jdbcType=VARCHAR}, #{sf2,jdbcType=VARCHAR}, #{sf3,jdbcType=VARCHAR}, 
      #{sf4,jdbcType=VARCHAR}, #{sf5,jdbcType=VARCHAR}, #{sf6,jdbcType=VARCHAR}, #{sf7,jdbcType=VARCHAR}, 
      #{sf8,jdbcType=VARCHAR}, #{sf9,jdbcType=VARCHAR}, #{sf10,jdbcType=VARCHAR}, #{jf1,jdbcType=VARCHAR}, 
      #{jf2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.hubian.hreport.service.model.generated.ReportData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="dataId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into report_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tableId != null" >
        table_id,
      </if>
      <if test="dataVersion != null" >
        data_version,
      </if>
      <if test="lf1 != null" >
        lf1,
      </if>
      <if test="lf2 != null" >
        lf2,
      </if>
      <if test="lf3 != null" >
        lf3,
      </if>
      <if test="lf4 != null" >
        lf4,
      </if>
      <if test="lf5 != null" >
        lf5,
      </if>
      <if test="lf6 != null" >
        lf6,
      </if>
      <if test="lf7 != null" >
        lf7,
      </if>
      <if test="lf8 != null" >
        lf8,
      </if>
      <if test="lf9 != null" >
        lf9,
      </if>
      <if test="lf10 != null" >
        lf10,
      </if>
      <if test="sf1 != null" >
        sf1,
      </if>
      <if test="sf2 != null" >
        sf2,
      </if>
      <if test="sf3 != null" >
        sf3,
      </if>
      <if test="sf4 != null" >
        sf4,
      </if>
      <if test="sf5 != null" >
        sf5,
      </if>
      <if test="sf6 != null" >
        sf6,
      </if>
      <if test="sf7 != null" >
        sf7,
      </if>
      <if test="sf8 != null" >
        sf8,
      </if>
      <if test="sf9 != null" >
        sf9,
      </if>
      <if test="sf10 != null" >
        sf10,
      </if>
      <if test="jf1 != null" >
        jf1,
      </if>
      <if test="jf2 != null" >
        jf2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tableId != null" >
        #{tableId,jdbcType=INTEGER},
      </if>
      <if test="dataVersion != null" >
        #{dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="lf1 != null" >
        #{lf1,jdbcType=BIGINT},
      </if>
      <if test="lf2 != null" >
        #{lf2,jdbcType=BIGINT},
      </if>
      <if test="lf3 != null" >
        #{lf3,jdbcType=BIGINT},
      </if>
      <if test="lf4 != null" >
        #{lf4,jdbcType=BIGINT},
      </if>
      <if test="lf5 != null" >
        #{lf5,jdbcType=BIGINT},
      </if>
      <if test="lf6 != null" >
        #{lf6,jdbcType=BIGINT},
      </if>
      <if test="lf7 != null" >
        #{lf7,jdbcType=BIGINT},
      </if>
      <if test="lf8 != null" >
        #{lf8,jdbcType=BIGINT},
      </if>
      <if test="lf9 != null" >
        #{lf9,jdbcType=BIGINT},
      </if>
      <if test="lf10 != null" >
        #{lf10,jdbcType=BIGINT},
      </if>
      <if test="sf1 != null" >
        #{sf1,jdbcType=VARCHAR},
      </if>
      <if test="sf2 != null" >
        #{sf2,jdbcType=VARCHAR},
      </if>
      <if test="sf3 != null" >
        #{sf3,jdbcType=VARCHAR},
      </if>
      <if test="sf4 != null" >
        #{sf4,jdbcType=VARCHAR},
      </if>
      <if test="sf5 != null" >
        #{sf5,jdbcType=VARCHAR},
      </if>
      <if test="sf6 != null" >
        #{sf6,jdbcType=VARCHAR},
      </if>
      <if test="sf7 != null" >
        #{sf7,jdbcType=VARCHAR},
      </if>
      <if test="sf8 != null" >
        #{sf8,jdbcType=VARCHAR},
      </if>
      <if test="sf9 != null" >
        #{sf9,jdbcType=VARCHAR},
      </if>
      <if test="sf10 != null" >
        #{sf10,jdbcType=VARCHAR},
      </if>
      <if test="jf1 != null" >
        #{jf1,jdbcType=VARCHAR},
      </if>
      <if test="jf2 != null" >
        #{jf2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hubian.hreport.service.model.generated.ReportDataExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from report_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update report_data
    <set >
      <if test="record.dataId != null" >
        data_id = #{record.dataId,jdbcType=BIGINT},
      </if>
      <if test="record.tableId != null" >
        table_id = #{record.tableId,jdbcType=INTEGER},
      </if>
      <if test="record.dataVersion != null" >
        data_version = #{record.dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.lf1 != null" >
        lf1 = #{record.lf1,jdbcType=BIGINT},
      </if>
      <if test="record.lf2 != null" >
        lf2 = #{record.lf2,jdbcType=BIGINT},
      </if>
      <if test="record.lf3 != null" >
        lf3 = #{record.lf3,jdbcType=BIGINT},
      </if>
      <if test="record.lf4 != null" >
        lf4 = #{record.lf4,jdbcType=BIGINT},
      </if>
      <if test="record.lf5 != null" >
        lf5 = #{record.lf5,jdbcType=BIGINT},
      </if>
      <if test="record.lf6 != null" >
        lf6 = #{record.lf6,jdbcType=BIGINT},
      </if>
      <if test="record.lf7 != null" >
        lf7 = #{record.lf7,jdbcType=BIGINT},
      </if>
      <if test="record.lf8 != null" >
        lf8 = #{record.lf8,jdbcType=BIGINT},
      </if>
      <if test="record.lf9 != null" >
        lf9 = #{record.lf9,jdbcType=BIGINT},
      </if>
      <if test="record.lf10 != null" >
        lf10 = #{record.lf10,jdbcType=BIGINT},
      </if>
      <if test="record.sf1 != null" >
        sf1 = #{record.sf1,jdbcType=VARCHAR},
      </if>
      <if test="record.sf2 != null" >
        sf2 = #{record.sf2,jdbcType=VARCHAR},
      </if>
      <if test="record.sf3 != null" >
        sf3 = #{record.sf3,jdbcType=VARCHAR},
      </if>
      <if test="record.sf4 != null" >
        sf4 = #{record.sf4,jdbcType=VARCHAR},
      </if>
      <if test="record.sf5 != null" >
        sf5 = #{record.sf5,jdbcType=VARCHAR},
      </if>
      <if test="record.sf6 != null" >
        sf6 = #{record.sf6,jdbcType=VARCHAR},
      </if>
      <if test="record.sf7 != null" >
        sf7 = #{record.sf7,jdbcType=VARCHAR},
      </if>
      <if test="record.sf8 != null" >
        sf8 = #{record.sf8,jdbcType=VARCHAR},
      </if>
      <if test="record.sf9 != null" >
        sf9 = #{record.sf9,jdbcType=VARCHAR},
      </if>
      <if test="record.sf10 != null" >
        sf10 = #{record.sf10,jdbcType=VARCHAR},
      </if>
      <if test="record.jf1 != null" >
        jf1 = #{record.jf1,jdbcType=VARCHAR},
      </if>
      <if test="record.jf2 != null" >
        jf2 = #{record.jf2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update report_data
    set data_id = #{record.dataId,jdbcType=BIGINT},
      table_id = #{record.tableId,jdbcType=INTEGER},
      data_version = #{record.dataVersion,jdbcType=VARCHAR},
      lf1 = #{record.lf1,jdbcType=BIGINT},
      lf2 = #{record.lf2,jdbcType=BIGINT},
      lf3 = #{record.lf3,jdbcType=BIGINT},
      lf4 = #{record.lf4,jdbcType=BIGINT},
      lf5 = #{record.lf5,jdbcType=BIGINT},
      lf6 = #{record.lf6,jdbcType=BIGINT},
      lf7 = #{record.lf7,jdbcType=BIGINT},
      lf8 = #{record.lf8,jdbcType=BIGINT},
      lf9 = #{record.lf9,jdbcType=BIGINT},
      lf10 = #{record.lf10,jdbcType=BIGINT},
      sf1 = #{record.sf1,jdbcType=VARCHAR},
      sf2 = #{record.sf2,jdbcType=VARCHAR},
      sf3 = #{record.sf3,jdbcType=VARCHAR},
      sf4 = #{record.sf4,jdbcType=VARCHAR},
      sf5 = #{record.sf5,jdbcType=VARCHAR},
      sf6 = #{record.sf6,jdbcType=VARCHAR},
      sf7 = #{record.sf7,jdbcType=VARCHAR},
      sf8 = #{record.sf8,jdbcType=VARCHAR},
      sf9 = #{record.sf9,jdbcType=VARCHAR},
      sf10 = #{record.sf10,jdbcType=VARCHAR},
      jf1 = #{record.jf1,jdbcType=VARCHAR},
      jf2 = #{record.jf2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hubian.hreport.service.model.generated.ReportData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update report_data
    <set >
      <if test="tableId != null" >
        table_id = #{tableId,jdbcType=INTEGER},
      </if>
      <if test="dataVersion != null" >
        data_version = #{dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="lf1 != null" >
        lf1 = #{lf1,jdbcType=BIGINT},
      </if>
      <if test="lf2 != null" >
        lf2 = #{lf2,jdbcType=BIGINT},
      </if>
      <if test="lf3 != null" >
        lf3 = #{lf3,jdbcType=BIGINT},
      </if>
      <if test="lf4 != null" >
        lf4 = #{lf4,jdbcType=BIGINT},
      </if>
      <if test="lf5 != null" >
        lf5 = #{lf5,jdbcType=BIGINT},
      </if>
      <if test="lf6 != null" >
        lf6 = #{lf6,jdbcType=BIGINT},
      </if>
      <if test="lf7 != null" >
        lf7 = #{lf7,jdbcType=BIGINT},
      </if>
      <if test="lf8 != null" >
        lf8 = #{lf8,jdbcType=BIGINT},
      </if>
      <if test="lf9 != null" >
        lf9 = #{lf9,jdbcType=BIGINT},
      </if>
      <if test="lf10 != null" >
        lf10 = #{lf10,jdbcType=BIGINT},
      </if>
      <if test="sf1 != null" >
        sf1 = #{sf1,jdbcType=VARCHAR},
      </if>
      <if test="sf2 != null" >
        sf2 = #{sf2,jdbcType=VARCHAR},
      </if>
      <if test="sf3 != null" >
        sf3 = #{sf3,jdbcType=VARCHAR},
      </if>
      <if test="sf4 != null" >
        sf4 = #{sf4,jdbcType=VARCHAR},
      </if>
      <if test="sf5 != null" >
        sf5 = #{sf5,jdbcType=VARCHAR},
      </if>
      <if test="sf6 != null" >
        sf6 = #{sf6,jdbcType=VARCHAR},
      </if>
      <if test="sf7 != null" >
        sf7 = #{sf7,jdbcType=VARCHAR},
      </if>
      <if test="sf8 != null" >
        sf8 = #{sf8,jdbcType=VARCHAR},
      </if>
      <if test="sf9 != null" >
        sf9 = #{sf9,jdbcType=VARCHAR},
      </if>
      <if test="sf10 != null" >
        sf10 = #{sf10,jdbcType=VARCHAR},
      </if>
      <if test="jf1 != null" >
        jf1 = #{jf1,jdbcType=VARCHAR},
      </if>
      <if test="jf2 != null" >
        jf2 = #{jf2,jdbcType=VARCHAR},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hubian.hreport.service.model.generated.ReportData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update report_data
    set table_id = #{tableId,jdbcType=INTEGER},
      data_version = #{dataVersion,jdbcType=VARCHAR},
      lf1 = #{lf1,jdbcType=BIGINT},
      lf2 = #{lf2,jdbcType=BIGINT},
      lf3 = #{lf3,jdbcType=BIGINT},
      lf4 = #{lf4,jdbcType=BIGINT},
      lf5 = #{lf5,jdbcType=BIGINT},
      lf6 = #{lf6,jdbcType=BIGINT},
      lf7 = #{lf7,jdbcType=BIGINT},
      lf8 = #{lf8,jdbcType=BIGINT},
      lf9 = #{lf9,jdbcType=BIGINT},
      lf10 = #{lf10,jdbcType=BIGINT},
      sf1 = #{sf1,jdbcType=VARCHAR},
      sf2 = #{sf2,jdbcType=VARCHAR},
      sf3 = #{sf3,jdbcType=VARCHAR},
      sf4 = #{sf4,jdbcType=VARCHAR},
      sf5 = #{sf5,jdbcType=VARCHAR},
      sf6 = #{sf6,jdbcType=VARCHAR},
      sf7 = #{sf7,jdbcType=VARCHAR},
      sf8 = #{sf8,jdbcType=VARCHAR},
      sf9 = #{sf9,jdbcType=VARCHAR},
      sf10 = #{sf10,jdbcType=VARCHAR},
      jf1 = #{jf1,jdbcType=VARCHAR},
      jf2 = #{jf2,jdbcType=VARCHAR}
    where data_id = #{dataId,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="org.hubian.hreport.service.model.generated.ReportDataExample" id="selectByExampleWithRowbounds" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from report_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>